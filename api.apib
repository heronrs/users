FORMAT: 1A
HOST: https://localhost:8000/api/v1/users

# Users API
A CRUD API for Users

# Data Structures

## User Response (object)
+ id: 5c1044f6cf88d14b4778f628 (string, fixed) - Unique identifier
+ first_name: John (string, required) - User first name
+ last_name: Doe (string, required) - User last name
+ telephones: 5516996354040, 551133327988 (array[string], required) - User telephones
    Numbers only
+ emails: johndoe@example.com, johndoe2@other.com (array[string]) - User emails
+ cpf: 02236686056 (string, required) - User CPF
    Numbers only
+ birthdate: 10/28/2019 (string, required) - User birthdate
    Any valid ISO8601 date format
+ active: true (boolean)
    + Default: true
+ address (Address, required)

## User Request (object)
+ first_name: John (string, required) - User first name
+ last_name: Doe (string, required) - User last name
+ telephones: 5516996354040, 551133327988 (array[string], required) - User telephones
    Numbers onlys
+ emails: johndoe@example.com, johndoe2@other.com (array[string]) - User emails
+ cpf: 02236686056 (string, required) - User CPF
    Numbers
+ birthdate: 10/28/2019 (string, required) - User birthdate
    Any valid ISO8601 date format
+ active: true (boolean)
    + Default: true
+ address (Address, required)

## Address (object)
+ city: Araraquara (string, fixed) - Address city
+ state_province: SÃ£o Paulo (string, required) - Address State/Province
+ country: Brazil (string, required) - Address Country
+ zip_code: 14801180 (string) - Address Zip Code
    Numbers only
+ public_area_desc: Av Barroso (string, required) - Address Public Area Description
+ number: 7856 (string, required) - Address number


# Users [/users]
User collection

+ Attributes (User Response)


## List User collection [GET /{?first_name,last_name,cpf,page,per_page}]
List only active users

+ Parameters
    + first_name: Carlos (string, optional) - User first name
    + last_name: Blanka (string, optional) - User last name
    + cpf: 37688765098 (string, optional) - User cpf
    + page: 1 (string, optional) - Pagination page number
    + per_page: 1 (string, optional) - Pagination itens per page

+ Response 200
    + Attributes
        +  result (array[User Response])

## Get User [GET /{user_id}]

+ Parameters
    + user_id: 5c1044f6cf88d14b4778f628 (string, required) - User id

+ Response 200
    + Attributes
        +  result (User Response)

+ Response 404
    + Attributes
        + message: Resource not found - (string)

## Create User [POST /]

+ Request Create User (application/json)
    + Attributes
        +  data (User Request)

+ Response 201
    + Attributes
        +  result (User Response)

+ Request Create User Bulk (application/json)
    + Attributes
        +  data (array[User Request])

+ Response 201
    + Attributes
        +  result (array[User Response])

+ Response 400

+ Response 422

## Update User [PUT /{user_id}]

+ Parameters
    + user_id: 5c1044f6cf88d14b4778f628 (string, required) - User id

+ Request (application/json)
    + Attributes
        + data (User Request)

+ Response 204

+ Response 404

## Update User [PATCH /{user_id}]

+ Parameters
    + user_id: 5c1044f6cf88d14b4778f628 (string, required) - User id

+ Request (application/json)
    + Attributes
        + data (User Request)

+ Response 204

+ Response 404

## Remove User [POST /{user_id}/remove]
Logically removes a user from database

+ Parameters
    + user_id: 5c1044f6cf88d14b4778f628 (string, required) - User id

+ Response 204

+ Response 404
    + Attributes
        + message: Resource not found - (string)